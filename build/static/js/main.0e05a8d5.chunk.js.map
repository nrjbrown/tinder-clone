{"version":3,"sources":["Header.jsx","axios.js","TinderCards.jsx","SwipeButtons.jsx","App.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","backgroundImage","imgUrl","SwipeButtons","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA4BeA,MArBf,WACI,OACI,sBAAKC,UAAU,SAAf,UAEI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAG3C,qBACIA,UAAU,eACVG,IAAI,+EACJC,IAAI,WAER,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,kECfvCK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAQ,6CCyDGC,MArDf,WACI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAIAC,qBAAU,WAAI,4CACV,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,iBADhC,OACUC,EADV,OAEIJ,EAAUI,EAAIC,MAFlB,4CADU,uBAAC,WAAD,wBAKVC,KACD,IAEHC,QAAQC,IAAIT,GAEZ,MAAsCD,mBAAS,IAA/C,mBAWA,OAXA,UAYI,qBAAKV,UAAU,cAAf,SACI,qBAAKA,UAAU,6BAAf,SACCW,EAAOU,KAAI,SAACC,GAAD,OAER,cAAC,IAAD,CACAtB,UAAU,QAEVuB,aAAc,CAAC,KAAM,QACrBC,QAAS,SAACC,GAAD,OAlBKC,EAkBgBJ,EAAOK,UAjB7CR,QAAQC,IAAI,WAAaM,GADf,IAAYA,GAmBdE,iBAAmB,kBAdXD,EAc2BL,EAAOK,UAblDR,QAAQC,IAAIO,EAAO,qBADJ,IAACA,GASR,SAOI,qBAAKE,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAOS,OAAhB,MAC7B/B,UAAU,OADV,SAEI,6BAAKsB,EAAOK,UAPfL,EAAOK,c,6FCRbK,MAtBf,WACI,OACI,sBAAKhC,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAaD,UAAU,uBAAvB,SACI,cAAC,IAAD,CAAYE,SAAS,YAEzB,cAACD,EAAA,EAAD,CAAaD,UAAU,qBAAvB,SACI,cAAC,IAAD,CAAWE,SAAS,YAExB,cAACD,EAAA,EAAD,CAAaD,UAAU,qBAAvB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAaD,UAAU,sBAAvB,SACI,cAAC,IAAD,CAAcE,SAAS,YAE3B,cAACD,EAAA,EAAD,CAAaD,UAAU,0BAAvB,SACI,cAAC,IAAD,CAAaE,SAAS,gBCTvB+B,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCNNkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e05a8d5.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton';\nimport ForumIcon from '@material-ui/icons/Forum';\n\n\nfunction Header() {\n    return (\n        <div className='header'>\n            \n            <IconButton>\n                <PersonIcon fontSize='large' className='header__icon'/>\n            </IconButton>\n            \n            <img\n                className='header__logo'\n                src='https://logos-world.net/wp-content/uploads/2020/09/Tinder-Emblem-700x394.png'\n                alt=\"Tinder\"\n            />\n            <IconButton>\n                <ForumIcon fontSize='large' className='header__icon'/>\n            </IconButton>\n            \n        </div>\n    )\n}\n\nexport default Header\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:\"https://nev-tinder-backend.herokuapp.com\"\n}); \n\nexport default instance;","import React, {useState, useEffect} from 'react';\nimport TinderCard from 'react-tinder-card';\nimport './TinderCards.css'; \nimport axios from './axios.js';\n\n\n\nfunction TinderCards() {\n    const [people, setPeople] = useState([]);\n\n//this connects the front & backend \n\n    useEffect(()=>{\n        async function fetchData() {\n            const req = await axios.get('/tinder/cards');\n            setPeople(req.data)\n        }\n        fetchData(); \n    }, []);\n\n    console.log(people)\n\n    const [direction, setLastDirection] = useState('');\n\n    const swiped =(direction, nameToDelete) => {\n        console.log(\"removing\" + nameToDelete);\n        // setLastDirection(direction)\n    }\n\n    const outOfFrame = (name) => {\n        console.log(name + \" left the screen!\");\n    }\n    \n    return (\n        <div className=\"tinderCards\">\n            <div className=\"tinderCards__cardContainer\">\n            {people.map((person)=>(\n                \n                <TinderCard\n                className=\"swipe\"\n                key={person.name}\n                preventSwipe={[\"up\", \"down\"]}\n                onSwipe={(dir) => swiped(dir, person.name)}\n                onCardLeftScreen= {()=> outOfFrame(person.name)}\n                >\n                    <div style={{ backgroundImage: `url(${person.imgUrl})`}}\n                    className=\"card\">\n                        <h3>{person.name}</h3>\n                    </div>\n                </TinderCard>\n            )\n               \n            )}\n            </div>\n\n           \n        </div>\n    );\n}\n\nexport default TinderCards\n","import React from 'react';\nimport \"./SwipeButtons.css\"\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nfunction SwipeButtons() {\n    return (\n        <div className=\"swipeButtons\">\n            <IconButton  className=\"swipeButtons__repeat\">\n                <ReplayIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton  className=\"swipeButtons__left\">\n                <CloseIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton  className=\"swipeButtons__star\">\n                <StarRateIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton  className=\"swipeButtons__right\">\n                <FavoriteIcon fontSize=\"large\"/>\n            </IconButton>\n            <IconButton  className=\"swipeButtons__lightning\">\n                <FlashOnIcon fontSize=\"large\"/>\n            </IconButton>\n        </div>\n    )\n}\n\nexport default SwipeButtons\n","import React from 'react'\nimport './App.css';\nimport Header from './Header';\nimport TinderCards from './TinderCards';\nimport SwipeButtons from './SwipeButtons';\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header/>\n      <TinderCards/>\n      <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}